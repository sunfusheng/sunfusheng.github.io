I"RU<p>这篇文章的目的很简单，就是要实现当我们在 GitHub 上创建应用或库的时候，Travis CI 可以帮助我们构建工程，可以把应用每次打的tag提交到 GitHub 的 releases 上，也可以把库构建完的每次版本提交到 Maven 上，还可以把应用发布到 Fir.im 上，成功或失败邮件通知我们。</p>

<p><strong>目录</strong></p>
<ul>
  <li>Travis CI
    <ul>
      <li>Travis CI 是什么？</li>
      <li>Travis CI 配置</li>
      <li>.travis.yml 中的属性</li>
    </ul>
  </li>
  <li>构建中涉及到的证书及密码问题</li>
  <li>提交到 GitHub 的 releases</li>
  <li>提交到 Maven</li>
  <li>发布到 Fir.im</li>
  <li>通知开发者</li>
  <li>其它
    <ul>
      <li>git tag</li>
      <li>studio 3.0 前后的打包</li>
      <li>gradlew 的命令</li>
      <li>个人应用示例</li>
    </ul>
  </li>
</ul>

<h4 id="travis-ci-是什么">Travis CI 是什么？</h4>

<p>Travis CI 是一种自动化持续集成工具，类似于公司经常使用的 Jenkins，但是 Travis CI 运行在云端支持 GitHub，我们可以用 Travis CI 做很多的事情，所以使用该工具完全可以满足我们的需求，解决我们的痛点。</p>

<h4 id="travis-ci-配置">Travis CI 配置</h4>

<p>首先第一步你需要到 travis-ci.org 网站上用你的 GitHub 帐号注册登录，需要注意的是 Travis 分为开源项目版本与付费项目版本。</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>开源版本域名：https://travis-ci.org​
付费版本域名：https://travis-ci.com
</code></pre></div></div>
<p>我们使用免费的版本就可以了，登录成功后，Travis 会同步你的 GitHub 仓库，如果你想为你的 GitHub 开源项目添加 Travis 持续集成，打开项目名字前面的开关就可以了。</p>

<p>第二步就是在本地配置 Travis 了，当前我的 Travis 版本是1.8.8，安装命令如下：</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">$</span> <span class="n">gem</span> <span class="n">install</span> <span class="n">travis</span> <span class="o">-</span><span class="n">v</span> <span class="mf">1.8</span><span class="o">.</span><span class="mi">8</span>
</code></pre></div></div>

<p>安装中可能遇到各种各样的问题，比如依赖其它的配置如ruby，或者travis镜像同步不下来，I believe you can fix it. 安装完毕后，检验一下是否成功：</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">$</span> <span class="n">travis</span> <span class="o">-</span><span class="n">v</span>
</code></pre></div></div>

<h4 id="travisyml-中的属性">.travis.yml 中的属性</h4>

<p>配置完 Travis 后，第三步在你项目的根目录下新建一个 .travis.yml 文件，编辑完后需要提交到 GitHub 上，下面我们先添加一下基本信息，需要注意的是 Travis 对格式很敏感的。</p>

<p>你可以查看他们的文档，配置 Android 项目的地址：​<a href="https://docs.travis-ci.com/user/languages/android/">https://docs.travis-ci.com/user/languages/android/</a>，我项目的基本配置如下：</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nl">language:</span> <span class="n">android</span>
<span class="nl">jdk:</span> <span class="n">oraclejdk8</span>
<span class="nl">sudo:</span> <span class="kc">true</span>

<span class="nl">android:</span>
  <span class="nl">components:</span>
  <span class="o">-</span> <span class="n">tools</span>
  <span class="o">-</span> <span class="n">platform</span><span class="o">-</span><span class="n">tools</span>
  <span class="o">-</span> <span class="n">tools</span>
  <span class="o">-</span> <span class="n">build</span><span class="o">-</span><span class="n">tools</span><span class="o">-</span><span class="mf">27.0</span><span class="o">.</span><span class="mi">3</span>
  <span class="o">-</span> <span class="n">android</span><span class="o">-</span><span class="mi">27</span>
  <span class="o">-</span> <span class="n">sys</span><span class="o">-</span><span class="n">img</span><span class="o">-</span><span class="n">armeabi</span><span class="o">-</span><span class="n">v7a</span><span class="o">-</span><span class="n">android</span><span class="o">-</span><span class="mi">27</span>
  <span class="o">-</span> <span class="n">extra</span><span class="o">-</span><span class="n">android</span><span class="o">-</span><span class="n">support</span>
  <span class="o">-</span> <span class="n">extra</span><span class="o">-</span><span class="n">android</span><span class="o">-</span><span class="n">m2repository</span>
  <span class="o">-</span> <span class="n">extra</span><span class="o">-</span><span class="n">google</span><span class="o">-</span><span class="n">m2repository</span>
  <span class="o">-</span> <span class="n">add</span><span class="o">-</span><span class="n">on</span>
  <span class="o">-</span> <span class="n">extra</span>
  <span class="nl">licenses:</span>
  <span class="o">-</span> <span class="n">android</span><span class="o">-</span><span class="n">sdk</span><span class="o">-</span><span class="n">preview</span><span class="o">-</span><span class="n">license</span><span class="o">-</span><span class="mi">52</span><span class="n">d11cd2</span>
  <span class="o">-</span> <span class="n">android</span><span class="o">-</span><span class="n">sdk</span><span class="o">-</span><span class="n">license</span><span class="o">-.+</span>
  <span class="o">-</span> <span class="n">google</span><span class="o">-</span><span class="n">gdk</span><span class="o">-</span><span class="n">license</span><span class="o">-.+</span>
</code></pre></div></div>

<p>Travis CI 在执行构建的时候也是有生命周期的，比如下面这些见名知意Hook住构建过程的方法：</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nl">before_cache:</span> <span class="n">缓存之前</span>
  <span class="o">...</span>
<span class="nl">cache:</span> <span class="n">缓存的时候</span>
  <span class="o">...</span>
<span class="nl">before_install:</span> <span class="n">安装之前</span>
  <span class="o">...</span>
<span class="nl">before_script:</span> <span class="n">执行命令之前</span>
  <span class="o">....</span>
<span class="nl">script:</span> <span class="n">执行命令的时候</span>
  <span class="o">...</span>
<span class="nl">deploy:</span> <span class="n">部署的时候</span>
  <span class="o">...</span>
<span class="nl">after_deploy:</span> <span class="n">部署之后</span>
  <span class="o">...</span>
<span class="nl">notifications:</span> <span class="n">通知的时候</span>
  <span class="o">...</span>
</code></pre></div></div>

<p>“…” 就是我们要添加的构建命令，完成这些命令就可以解决我们的目的了，比如让我们的构建任务支持缓存，一般指定在.gradle目录下的缓存，如下：</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nl">before_cache:</span>
<span class="o">-</span> <span class="n">rm</span> <span class="o">-</span><span class="n">f</span>  <span class="n">$HOME</span><span class="o">/.</span><span class="na">gradle</span><span class="o">/</span><span class="n">caches</span><span class="o">/</span><span class="n">modules</span><span class="o">-</span><span class="mi">2</span><span class="o">/</span><span class="n">modules</span><span class="o">-</span><span class="mi">2</span><span class="o">.</span><span class="na">lock</span>
<span class="o">-</span> <span class="n">rm</span> <span class="o">-</span><span class="n">fr</span> <span class="n">$HOME</span><span class="o">/.</span><span class="na">gradle</span><span class="o">/</span><span class="n">caches</span><span class="o">/*/</span><span class="n">plugin</span><span class="o">-</span><span class="n">resolution</span><span class="o">/</span>

<span class="nl">cache:</span>
  <span class="nl">directories:</span>
  <span class="o">-</span> <span class="s">"$HOME/.gradle/caches/"</span>
  <span class="o">-</span> <span class="s">"$HOME/.gradle/wrapper/"</span>
  <span class="o">-</span> <span class="s">"$HOME/.android/build-cache"</span>
</code></pre></div></div>

<h4 id="构建中涉及到的证书及密码问题">构建中涉及到的证书及密码问题</h4>

<p>首先可能你不想将签名文件传到 GitHub 上，那么我门将签名文件加密，将加密后的文件上传就可以了，加密的命令：</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">$</span> <span class="n">travis</span> <span class="n">encrypt</span><span class="o">-</span><span class="n">file</span> <span class="o">/../</span><span class="n">keystore</span><span class="o">.</span><span class="na">jks</span> <span class="o">--</span><span class="n">add</span>
</code></pre></div></div>

<p>该命令执行完后，会在你的 .travis.yml 文件中追加以下信息：</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nl">before_install:</span>
<span class="o">-</span> <span class="n">openssl</span> <span class="n">aes</span><span class="o">-</span><span class="mi">256</span><span class="o">-</span><span class="n">cbc</span> <span class="o">-</span><span class="no">K</span> <span class="n">$encrypted_634573b3a4f8_key</span> <span class="o">-</span><span class="n">iv</span> <span class="n">$encrypted_634573b3a4f8_iv</span>
  <span class="o">-</span><span class="n">in</span> <span class="n">signings</span><span class="o">/</span><span class="n">keystore</span><span class="o">.</span><span class="na">jks</span><span class="o">.</span><span class="na">enc</span> <span class="o">-</span><span class="n">out</span> <span class="n">signings</span><span class="o">/</span><span class="n">keystore</span><span class="o">.</span><span class="na">jks</span> <span class="o">-</span><span class="n">d</span>
</code></pre></div></div>

<p>还会在 https://travis-ci.org/你的GitHub名称/你的项目名称/settings 下面添加加密后的key和value，执行完上面的加密命令后你可以去查看下，除了这个证书的问题，涉及到提交到 Maven 和发布到 Fir.im 都需要相应的 token，这些token信息也是不应该外泄的，我们可以手动在那下面添加这些信息，再需要执行对应命令的时候通过 $XXX_TOKEN 引用即可。</p>

<h4 id="提交到-github-的-releases">提交到 GitHub 的 releases</h4>

<p>下面就是配置 Travis CI 自动发布apk文件到 Github releases 上的命令，执行如下命令：</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">$</span> <span class="n">travis</span> <span class="n">setup</span> <span class="n">releases</span>
</code></pre></div></div>

<p>执行完这个命令，Travis 同样会在你的 .travis.yml 文件下追加如下信息：</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nl">deploy:</span>
  <span class="nl">provider:</span> <span class="n">releases</span>
  <span class="nl">api_key:</span>
    <span class="nl">secure:</span> <span class="n">生成的Key</span>
  <span class="nl">file:</span> <span class="n">你输入的apk路径</span>
  <span class="nl">on:</span>
    <span class="nl">repo:</span> <span class="n">你的工程</span>
</code></pre></div></div>

<p>你可以查看下.travis.yml 文件，但是这些信息还不够，我们还要人为的添加如下命令：</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nl">deploy:</span>
  <span class="nl">skip_cleanup:</span> <span class="kc">true</span>
  <span class="nl">on:</span>
    <span class="nl">tags:</span> <span class="kc">true</span>
    <span class="nl">all_branches:</span> <span class="kc">true</span>
</code></pre></div></div>

<p><strong>skip_cleanup</strong>：这个命令很重要，默认情况下 Travis CI 在完成编译后会清除所有生成的文件，因此需要设置 skip_cleanup: true 来忽略此操作，否则他会找不到你的apk如果你默认生成的apk路径在build目录下的话。
<strong>on</strong>：发布的时机，我的设置是 tags: true，即只在有打tag的情况下才会部署发布。</p>

<h4 id="提交到-maven">提交到 Maven</h4>

<p>我的库都是通过 <a href="https://github.com/novoda/bintray-release">https://github.com/novoda/bintray-release</a> 提交到 jcenter 上的，bintray-release 的使用很简单，请自行解决哈，如果前面配置的都没问题，我们只需配置一行命令就可以发布我们的库：</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nl">after_deploy:</span>
<span class="o">-</span> <span class="s">"./gradlew clean build bintrayUpload -PbintrayUser=sfsheng0322 -PbintrayKey=$BINTRAY_TOKEN -PdryRun=false"</span>
</code></pre></div></div>

<h4 id="发布到-firim">发布到 Fir.im</h4>

<p>关于 fie-cli 插件更多的信息，请访问 <a href="https://github.com/FIRHQ/fir-cli">https://github.com/FIRHQ/fir-cli</a>，我的配置如下：</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nl">before_install:</span>
<span class="o">-</span> <span class="n">gem</span> <span class="n">install</span> <span class="n">fir</span><span class="o">-</span><span class="n">cli</span>
<span class="nl">after_deploy:</span>
<span class="o">-</span> <span class="n">fir</span> <span class="n">p</span> <span class="n">app</span><span class="o">/</span><span class="n">release</span><span class="o">/</span><span class="nc">Gank</span><span class="o">.</span><span class="na">IO</span><span class="o">.</span><span class="na">apk</span> <span class="o">-</span><span class="no">T</span> <span class="n">$FIR_TOKEN</span> <span class="o">-</span><span class="n">c</span> <span class="s">"`git cat-file tag $TRAVIS_TAG`"</span>
</code></pre></div></div>

<h4 id="通知开发者">通知开发者</h4>

<p>配置下你的邮箱就可以了，构建完成需要部署的话，成功或失败都会邮件通知你的。</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nl">notifications:</span>
  <span class="nl">email:</span>
  <span class="o">-</span> <span class="n">sfsheng0322</span><span class="err">@</span><span class="mi">126</span><span class="o">.</span><span class="na">com</span>
</code></pre></div></div>

<h4 id="git-tag">git tag</h4>

<p>最后一步，打个 tag，让 Tavis 跑起来，构建我们的项目，该提交提交，该发布发布。</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">查看tag</span>
<span class="n">git</span> <span class="n">tag</span>

<span class="c1">//打tag  </span>
<span class="err">$</span> <span class="n">git</span> <span class="n">tag</span> <span class="o">-</span><span class="n">a</span> <span class="no">V1</span><span class="o">.</span><span class="mf">0.0</span> <span class="o">-</span><span class="n">m</span> <span class="s">"注释"</span>  
<span class="err">$</span> <span class="n">git</span> <span class="n">push</span> <span class="n">origin</span> <span class="no">V1</span><span class="o">.</span><span class="mf">0.0</span>  

<span class="c1">//删除本地tag  </span>
<span class="err">$</span> <span class="n">git</span> <span class="n">tag</span> <span class="o">-</span><span class="n">d</span> <span class="no">V1</span><span class="o">.</span><span class="mf">0.0</span>

<span class="c1">//删除远程tag  </span>
<span class="err">$</span> <span class="n">git</span> <span class="n">push</span> <span class="n">origin</span> <span class="o">--</span><span class="n">delete</span> <span class="n">tag</span> <span class="no">V1</span><span class="o">.</span><span class="mf">0.0</span>
</code></pre></div></div>

<h4 id="studio-30-前后的打包">studio 3.0 前后的打包</h4>

<p>android studio 3.0 之前 gradle 简单的打包脚本</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">def</span> <span class="nf">generateApkBefore3_0</span><span class="o">(</span><span class="n">variant</span><span class="o">)</span> <span class="o">{</span>
    <span class="n">variant</span><span class="o">.</span><span class="na">outputs</span><span class="o">.</span><span class="na">each</span> <span class="o">{</span> <span class="n">output</span> <span class="o">-&gt;</span>
        <span class="n">output</span><span class="o">.</span><span class="na">outputFile</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">File</span><span class="o">(</span><span class="n">project</span><span class="o">.</span><span class="na">rootDir</span><span class="o">.</span><span class="na">absolutePath</span> <span class="o">+</span> <span class="s">"/app/outputs"</span><span class="o">,</span> <span class="s">"XXX.apk"</span><span class="o">)</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<p>android studio 3.0 之后 gradle 简单的打包脚本</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">def</span> <span class="nf">generateApkAfter3_0</span><span class="o">(</span><span class="n">variant</span><span class="o">)</span> <span class="o">{</span>
    <span class="k">if</span> <span class="o">(</span><span class="n">variant</span><span class="o">.</span><span class="na">buildType</span><span class="o">.</span><span class="na">name</span> <span class="o">==</span> <span class="s">"release"</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">variant</span><span class="o">.</span><span class="na">getPackageApplication</span><span class="o">().</span><span class="na">outputDirectory</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">File</span><span class="o">(</span><span class="n">project</span><span class="o">.</span><span class="na">rootDir</span><span class="o">.</span><span class="na">absolutePath</span> <span class="o">+</span> <span class="s">"/app/outputs"</span><span class="o">)</span>
        <span class="n">variant</span><span class="o">.</span><span class="na">getPackageApplication</span><span class="o">().</span><span class="na">outputScope</span><span class="o">.</span><span class="na">apkDatas</span><span class="o">.</span><span class="na">forEach</span> <span class="o">{</span> <span class="n">apkData</span> <span class="o">-&gt;</span>
            <span class="n">apkData</span><span class="o">.</span><span class="na">outputFileName</span> <span class="o">=</span> <span class="s">"XXX.apk"</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h4 id="gradlew-的命令">gradlew 的命令</h4>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">$</span> <span class="o">./</span><span class="n">gradlew</span> <span class="n">assemble</span> <span class="c1">//为所有构建类型创建apk  </span>
<span class="err">$</span> <span class="o">./</span><span class="n">gradlew</span> <span class="n">check</span> <span class="c1">//运行所有的检查，比如说Android Lint，如果发现问题可终止任务  </span>
<span class="err">$</span> <span class="o">./</span><span class="n">gradlew</span> <span class="n">build</span> <span class="c1">//运行以上两个任务  </span>
<span class="err">$</span> <span class="o">./</span><span class="n">gradlew</span> <span class="n">clean</span> <span class="c1">//清除生成的apk  </span>
<span class="err">$</span> <span class="o">./</span><span class="n">gradlew</span> <span class="n">connectedCheck</span> <span class="c1">//在设备上运行测试  </span>
<span class="err">$</span> <span class="o">./</span><span class="n">gradlew</span> <span class="n">deviceCheck</span> <span class="c1">//远程设备运行测试  </span>
<span class="err">$</span> <span class="o">./</span><span class="n">gradlew</span> <span class="n">installDebug</span><span class="o">/</span><span class="n">installRelease</span> <span class="c1">//在设备商安装指定版本  </span>
<span class="err">$</span> <span class="o">./</span><span class="n">gradlew</span> <span class="n">uninstall</span> <span class="c1">//卸载应用  </span>
</code></pre></div></div>

<h4 id="个人应用示例">个人应用示例</h4>

<p>下面我的两个库都应用了 Travis CI，看完这篇文章如果您有这个需求，请参考：</p>

<p><strong>GroupRecyclerViewAdapter</strong><br />
可增删改查、可展开收起的分组列表，轻松帮你实现【微信-我】等类似页面，动态可配置。<br />
​地址: <a href="https://github.com/sunfusheng/GroupRecyclerViewAdapter">https://github.com/sunfusheng/GroupRecyclerViewAdapter</a></p>

<p><strong>FirUpdater</strong><br />
Fir.im通道APK更新器，使用简单，让自己的demo快速具备升级功能。<br />
地址: <a href="https://github.com/sunfusheng/FirUpdater">https://github.com/sunfusheng/FirUpdater</a></p>

:ET